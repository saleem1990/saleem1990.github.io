/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notification;

import java.sql.Connection;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author owner
 */
public class AllPlatForm extends javax.swing.JFrame {

    private static String dbServerIp;
    private static String dbPort;
    private static String activeDatabase;

    public static Connection connectDB;

    /**
     * Creates new form AllPlatForm
     */
    public AllPlatForm() {

      //  connectDB = custom_connect("postgres", "sequence", "172.16.103.200", "5433", "bespoke");
        connectDB = custom_connect("postgres", "sequence", "localhost", "5432", "bespoke");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel6 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        smsTable = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton12 = new javax.swing.JButton();
        smsfileTxt = new javax.swing.JLabel();
        progressTxt = new javax.swing.JLabel();
        laylaTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton11.setText("Upload Excel");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel6.add(jButton11, gridBagConstraints);

        smsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        smsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(smsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane8, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Message", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 255))); // NOI18N
        jScrollPane9.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane9, gridBagConstraints);

        jButton12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton12.setText("Send Message");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButton12, gridBagConstraints);

        smsfileTxt.setText(".");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel6.add(smsfileTxt, gridBagConstraints);

        progressTxt.setText(".");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel6.add(progressTxt, gridBagConstraints);

        laylaTxt.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        laylaTxt.setText("add numbers seperate with ,");
        laylaTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                laylaTxtFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(laylaTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser(System.getProperty("Excel.dir"));

        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files (*.xls)", new String[]{"xls"});

        fileChooser.setFileFilter(filter);

        fileChooser.showOpenDialog(this);

        this.smsfileTxt.setText(fileChooser.getSelectedFile().getPath());

        System.setProperty("Excel.dir", fileChooser.getSelectedFile().getParent());

        ClearTable.clearthisTable(this.smsTable);

        if (smsfileTxt.getText().length() > 0) {
            populateSMSData(this.smsfileTxt.getText());

        } else {
            JOptionPane.showMessageDialog(this, "Please select the UPLOAD EXCEL button to locate a file", "Caution", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton11ActionPerformed
    private void populateSMSData(String file) {
        Vector dataHolder = ExportData.read(file);
        System.out.println(dataHolder.size());

        Vector columns = new Vector();

        //   columns.add("Rota_fy");
        // columns.add("Ref_id");
        columns.add("Staff Name");
        columns.add("Tel Number");

        this.smsTable.setModel(new DefaultTableModel(dataHolder, columns));
//
//        for (int i = 0; i < excelTbl.getRowCount(); i++) {
////            Object item = excelTbl.getValueAt(i, 2);
////            fixDate(item, i);
////            
//            Object pf = excelTbl.getValueAt(i, 0);
//            Object pfcov = excelTbl.getValueAt(i, 4);
//            Object pfsup = excelTbl.getValueAt(i, 5);
//            excelTbl.setValueAt(pf.toString().replace(".0", ""), i, 0);
//            excelTbl.setValueAt(pfcov.toString().replace(".0", ""), i, 4);
//            excelTbl.setValueAt(pfsup.toString().replace(".0", ""), i, 5);
//
//            Object days = excelTbl.getValueAt(i, 1);
//
//            //Return a concatenated String
//            String coveringname = getFullName(excelTbl.getValueAt(i, 4).toString());
//            excelTbl.setValueAt(coveringname + "/" + excelTbl.getValueAt(i, 4), i, 4);
////            excelTbl.setValueAt(Integer.valueOf(days.toString()), i, 1);
//
//        }
    }

    public static java.sql.Connection custom_connect(String user, String password, String url, String port, String db) {
        Connection connection = null;

        try {

            java.lang.Class.forName("org.postgresql.Driver");

        } catch (java.lang.ClassNotFoundException cnf) {

            cnf.printStackTrace();

        }

        try {

            // if (dbServerIp == null) {
            // dbServerIp = "localhost"jj;
            dbServerIp = url;
            //}

            //   if (dbPort == null) {
            dbPort = port;
            // }

            //if (activeDatabase == null) {
            activeDatabase = db;
            //}
            //  System.out.println("jdbc:postgresql://" + this.dbServerIp + ":" + dbPort + "/" + activeDatabase + " " + userName + " " + passWord);
            connection = java.sql.DriverManager.getConnection("jdbc:postgresql://" + dbServerIp + ":" + dbPort + "/" + activeDatabase, user, password);
            System.err.print("jdbc:postgresql://" + dbServerIp + ":" + dbPort + "/" + activeDatabase);
//            if (connection != null) {
//                JOptionPane.showMessageDialog(new java.awt.Frame(), "connected");
//            }
//            else{
//                  JOptionPane.showMessageDialog(new java.awt.Frame(), "Not connected");
            System.err.println(System.getProperty("user.dir") + System.getProperty("file.separator") + "logo.jpg");
//            }
        } catch (java.sql.SQLException sqlExec) {

            //     msg = sqlExec.getMessage().toString();
            System.err.println(System.getProperty("user.dir"));

            //     Accurate = false;
            //javax.swing.JOptionPane.showMessageDialog(this, "ERROR : Logon denied due to incorrect username & password,\n network disconnection or dataserver not running!\n\nERROR DETAILS : \n[" + sqlExec.getMessage() + "]");
            sqlExec.printStackTrace();
            //   this.setVisible(true);

        }
        return connection;
    }

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Sure to proceed with " + smsTable.getRowCount() + " contacts", "Caution before proceeding", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {

            if (smsTable.getRowCount() > 0) {
                for (int i = 0; i < smsTable.getRowCount(); i++) {
                    String contact = smsTable.getValueAt(i, 1).toString();

                    String name = smsTable.getValueAt(i, 0).toString();
                    progressTxt.setText("Sending message to " + name + "/" + contact);

                    System.err.println("Sending message to " + name + "/" + contact);;

                    new SendSms(contact, "Dear " + name + ",\n" + jTextArea1.getText(), randomAlphaNumeric(7), connectDB);

                }

                ClearTable.clearthisTable(smsTable);

                progressTxt.setText("Transaction complete");
            } else {
                String[] contact = laylaTxt.getText().replace(" ", "").split(",");

                for (int i = 0; i < contact.length; i++) {

                    System.err.println(contact[i]);

                    new SendSms(contact[i], jTextArea1.getText(), randomAlphaNumeric(7), connectDB);

                }

            }
            JOptionPane.showMessageDialog(this, "All Done");

        }


    }//GEN-LAST:event_jButton12ActionPerformed

    private void laylaTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_laylaTxtFocusGained
        // TODO add your handling code here:
        if (laylaTxt.getText().startsWith("add")) {
            laylaTxt.setText("");
        } else {
            laylaTxt.setText(laylaTxt.getText().trim());
            laylaTxt.selectAll();
        }
    }//GEN-LAST:event_laylaTxtFocusGained
    private static final String ALPHA_NUMERIC_STRING = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

    public static String randomAlphaNumeric(int count) {
        StringBuilder builder = new StringBuilder();
        while (count-- != 0) {
            int character = (int) (Math.random() * ALPHA_NUMERIC_STRING.length());
            builder.append(ALPHA_NUMERIC_STRING.charAt(character));
        }
        return builder.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllPlatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllPlatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllPlatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllPlatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllPlatForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField laylaTxt;
    private javax.swing.JLabel progressTxt;
    private javax.swing.JTable smsTable;
    private javax.swing.JLabel smsfileTxt;
    // End of variables declaration//GEN-END:variables
}
